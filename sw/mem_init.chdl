------------------------------------------------------------------------------
--
-- This file is automatically generated from mem_init.chdl and
-- the binary ELF file. Only modify this file when it has a .chdl
-- extension!
--
-- - Martin Strubel hackfin section5.ch (cpp template)

-- This is the file for 32 bit architectures

------------------------------------------------------------------------------
#include "../include/generated/autoconf.h"
#include "arch.h"

library IEEE;
	use IEEE.std_logic_1164.all;
	use IEEE.numeric_std.all;

library work;
	use work.ram.all;
#if defined(ARCH_MIPS32) || defined(ARCH_RISCV)
	use work.memory.all;
#endif

#if defined(ARCH_ZPU) || defined (ARCH_MSP430)

package memory_initialization is
	-- RAM bank address width
	constant ZPUMEM_ADDR_W    : integer := CONFIG_BRAM_ADDR_WIDTH - 2;

	type dram32_init_t is array(natural range 0 to 2**ZPUMEM_ADDR_W-1)
		of unsigned(31 downto 0);

-- No bank array used in this implementation
--	type ram_bank_t is array(natural range 0 to 1)
--		of dram32_init_t;

	constant BOOTROM_INIT : dram32_init_t := 
	(
#include "zpu_data.tmp"
	);

end package;

#elif defined(ARCH_RISCV)

package memory_initialization is

	constant BOOTROM_DATA_A_INIT : dram_bank_t := (
#include "riscv_dram_a.tmp"
	);

	constant BOOTROM_DATA_B_INIT : dram_bank_t := (
#include "riscv_dram_b.tmp"
	);

	constant BOOTROM_PROG_INIT: iram_bank_t := (
	(
#include "riscv_iram_h.tmp"
	),
	(
#include "riscv_iram_l.tmp"
	)
	);

	constant IRAM_INIT_NONE : iram_bank_t := (
		( others => x"0000" ),
		( others => x"0000" )
	);

	constant DRAM_INIT_NONE : dram_bank_t := (
		( others => x"0000" ),
		( others => x"0000" ),
		( others => x"0000" ),
		( others => x"0000" )
	);

end package;


#elif defined(ARCH_MIPS32)

package memory_initialization is

	constant BOOTROM_DATA_A_INIT : dram_bank_t := (
#include "mips_dram_a.tmp"
	);

	constant BOOTROM_DATA_B_INIT : dram_bank_t := (
#include "mips_dram_b.tmp"
	);

	constant BOOTROM_PROG_INIT: iram_bank_t := (
	(
#include "mips_iram_h.tmp"
	),
	(
#include "mips_iram_l.tmp"
	)
	);

	constant IRAM_INIT_NONE : iram_bank_t := (
		( others => x"0000" ),
		( others => x"0000" )
	);

	constant DRAM_INIT_NONE : dram_bank_t := (
		( others => x"0000" ),
		( others => x"0000" ),
		( others => x"0000" ),
		( others => x"0000" )
	);

end package;


#else

#error "Architecture not defined"

#endif
